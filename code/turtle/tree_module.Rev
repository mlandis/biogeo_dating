
##############
# tree model #
##############

# tree
tau_tmp 	<- readTrees(tree_fn)[1]
names 		=  tau_tmp.names()
n_species 	<- tau_tmp.ntips()
n_branches	<- 2 * n_species - 2
n_nodes     <- tau_tmp.nnodes()

# tree ages
tau_rescale <- 180.
tau_tmp.rescale( 1.0 / tau_tmp.rootAge() )
tip_ages <- rep(0., n_species)

# evol length
evol ~ dnUnif(0,1000)
evol.setValue( runif(1,0,10)[1] )
mv[mvi++] = mvScale(evol, tune=true, lambda=0.1, weight=40)
mv[mvi++] = mvScale(evol, tune=false, lambda=0.5, weight=30)
mv[mvi++] = mvScale(evol, tune=false, lambda=2.0, weight=20)
mv[mvi++] = mvSlide(evol, tune=true, delta=0.1, weight=20)

# ages, clocks
max_age <- 540
if (exists("use_calib_joyce")) {
    root_age ~ dnUnif(151.7, 251.4)
} else {
    root_age ~ dnUnif(0,max_age)
}
root_age.setValue(tau_rescale)
mv[mvi++] = mvScale(root_age, tune=true, lambda=0.2, weight=20)
mv[mvi++] = mvScale(root_age, tune=false, lambda=2.0, weight=20)
mv[mvi++] = mvScale(root_age, tune=false, lambda=5.0, weight=20)
mv[mvi++] = mvSlide(root_age, tune=false, delta=2.0, weight=20)

# want avg subst rate of 10^-7 / site / yr
# e.g. 10^-1 / site / Myr
s_bg ~ dnUnif(-3,3)
s_bg.setValue(runif(1,-1,1)[1])
mv[mvi++] = mvSlide(s_bg, weight=n_branches/30)

# determine molecular,biogeographic clocks
clock_mol    := evol / root_age
clock_bg     := clock_mol * 10^s_bg

# report the expected number of events/site
height_mol   := clock_mol * root_age # this equals evol
height_bg    := clock_bg * root_age

# tree
tau_unit ~ dnUniformTimeTree(rootAge=1., taxa=names)
tau_unit.setValue( tau_tmp )
tau := fnTreeScale(scale=root_age, tree=tau_unit, tipAges=tip_ages)

# update branch lengths
mv[mvi++] = mvNodeTimeSlideUniform(tau_unit, weight=n_branches*2)

# monitor clade ages
clade_pleuro = clade("Pelomedusa_subrufa","Chelodina_longicollis")
age_pleuro := tmrca(tau, clade_pleuro)
clade_crypto = clade("Carettochelys_insculpta","Gopherus_polyphemus")
age_crypto := tmrca(tau, clade_crypto)

